cmake_minimum_required(VERSION 2.8.3)
project(test)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  std_msgs
)

## System dependencies are found with CMake's conventions
find_package(PkgConfig)
find_package(Boost REQUIRED COMPONENTS thread)
find_package(cmake_modules REQUIRED)



###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS 
  LIBRARIES 
  CATKIN_DEPENDS centennial_msgs centennial_utils roscpp rospy std_msgs
  DEPENDS system_lib
)

###########
## Build ##
###########

pkg_check_modules(SDL REQUIRED sdl2)
if (SDL_FOUND)
include_directories(${SDL_INCLUDE_DIRS})
else(SDL_FOUND)
message( FATAL_ERROR "You need SDL! Run sudo apt-get install libsdl2-dev")
endif(SDL_FOUND)

include_directories(include ${catkin_INCLUDE_DIRS})

find_package(centennial_utils REQUIRED)
include_directories(${centennial_utils_INCLUDE_DIRS})

add_executable(TESTDrivetrain src/Drivetrain/TEST_Drivetrain.cpp )
target_link_libraries(TESTDrivetrain ${catkin_LIBRARIES})
add_dependencies(TESTDrivetrain ${catkin_EXPORTED_TARGETS})

add_executable(TESTCommander src/Drivetrain/TEST_Commander.cpp )
target_link_libraries(TESTCommander ${catkin_LIBRARIES})
add_dependencies(TESTCommander ${catkin_EXPORTED_TARGETS})

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS DriveTrainAndArm DriveTrainAndArm_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_DriveTrainAndArm.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
